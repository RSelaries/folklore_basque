[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://cexfoy4i38snr"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_a1nx8"]
parameter_name = "Texture2DParameter"
texture_source = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_uyu5n"]
output_port_for_preview = 0
source = 5

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_s8vft"]
input_name = "uv"

[sub_resource type="VisualShaderNodeTransformVecMult" id="VisualShaderNodeTransformVecMult_hlgpd"]
default_input_values = [0, Transform3D(1.3, 0.905, 0, 0, 0.96, 1.35, 0, 0, 1.375, 0, 0, 0), 1, Vector3(0, 0, 0)]

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D Texture2DParameter : hint_screen_texture;



void vertex() {
// Input:4
	vec2 n_out4p0 = UV;


// TransformVectorMult:5
	mat4 n_in5p0 = mat4(vec4(1.30000, 0.00000, 0.00000, 0.0), vec4(0.90500, 0.96000, 0.00000, 0.0), vec4(0.00000, 1.35000, 1.37500, 0.0), vec4(0.00000, 0.00000, 0.00000, 1.0));
	vec3 n_out5p0 = (n_in5p0 * vec4(vec3(n_out4p0, 0.0), 1.0)).xyz;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(Texture2DParameter, vec2(n_out5p0.xy));


// Output:0
	COLOR.rgb = vec3(n_out3p0.xyz);


}
"
mode = 1
flags/light_only = false
nodes/vertex/2/node = SubResource("VisualShaderNodeTexture2DParameter_a1nx8")
nodes/vertex/2/position = Vector2(-940, 440)
nodes/vertex/3/node = SubResource("VisualShaderNodeTexture_uyu5n")
nodes/vertex/3/position = Vector2(-20, 260)
nodes/vertex/4/node = SubResource("VisualShaderNodeInput_s8vft")
nodes/vertex/4/position = Vector2(-1060, 140)
nodes/vertex/5/node = SubResource("VisualShaderNodeTransformVecMult_hlgpd")
nodes/vertex/5/position = Vector2(-700, 180)
nodes/vertex/connections = PackedInt32Array(2, 0, 3, 2, 3, 0, 0, 2, 4, 0, 5, 1, 5, 0, 3, 0)
